/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/paypal-payments.js":
/*!*****************************************!*\
  !*** ./resources/js/paypal-payments.js ***!
  \*****************************************/
/***/ (() => {

eval("function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar errorsExists = false;\nvar fields = {};\n\nfunction getFields() {\n  return $('#order-form').serializeArray().reduce(function (obj, item) {\n    obj[item.name] = item.value;\n    return obj;\n  }, {});\n}\n\nfunction isEmptyFields() {\n  var fields = getFields();\n\n  for (var _i = 0, _Object$entries = Object.entries(fields); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        key = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n\n    if (value.length < 1) {\n      return true;\n    }\n  }\n\n  return false;\n} //\n// const paypalConfig = {\n//   onInit: function(data, actions) {\n//\n//   },\n// };\n\n\npaypal.Buttons({\n  onInit: function onInit(data, actions) {\n    if (isEmptyFields()) {\n      actions.disable();\n    }\n\n    $(document).on('change', '#order-form', function () {\n      if (!isEmptyFields()) {\n        actions.enable();\n      }\n    });\n  },\n  onClick: function onClick(data, actions) {\n    if (isEmptyFields()) {\n      alert('Fields are empty'); // notification\n    }\n  },\n  createOrder: function createOrder(data, actions) {\n    var errorClass = 'is-invalid';\n    var fields = getFields();\n    $.ajaxSetup({\n      headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n      }\n    });\n    return $.ajax({\n      url: '/paypal/order/create',\n      type: 'POST',\n      dataType: 'json',\n      data: JSON.stringify(fields),\n      beforeSend: function beforeSend() {\n        $('.invalid-feedback').remove();\n        $(\".\".concat(errorClass)).removeClass(errorClass);\n      },\n      error: function error(data) {\n        var responseJson = data.responseJSON;\n        console.log('error', responseJson);\n\n        if (typeof responseJson !== 'undefined') {\n          var errorTemplate = \"<span class=\\\"invalid-feedback\\\" role=\\\"alert\\\">\\n                                        <strong>___</strong>\\n                                    </span>\";\n\n          for (var _i2 = 0, _Object$entries2 = Object.entries(responseJson.errors); _i2 < _Object$entries2.length; _i2++) {\n            var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),\n                field = _Object$entries2$_i[0],\n                message = _Object$entries2$_i[1];\n\n            var $input = $(\"input[name=\\\"\".concat(field, \"\\\"]\"));\n            $input.addClass(errorClass);\n            $input.after(errorTemplate.replace('___', message[0]));\n          }\n        }\n      }\n    }).then(function (order) {\n      return order.vendor_order_id;\n    })[\"catch\"](function (error) {\n      return;\n    });\n  },\n  // Call your server to finalize the transaction\n  onApprove: function onApprove(data, actions) {\n    if (data.hasOwnProperty('orderID')) {\n      return fetch('/paypal/order/' + data.orderID + '/capture', {\n        method: 'post',\n        headers: {\n          'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content'),\n          'Accept': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (orderData) {\n        console.log(orderData);\n        var errorDetail = Array.isArray(orderData.details) && orderData.details[0];\n\n        if (errorDetail && errorDetail.issue === 'INSTRUMENT_DECLINED') {\n          return actions.restart();\n        }\n\n        if (errorDetail) {\n          var iziToastOpts = {\n            title: 'Sorry, your transaction could not be processed.',\n            position: 'topCenter'\n          };\n\n          if (errorDetail.description) {\n            iziToastOpts['message'] = errorDetail.description;\n          }\n\n          iziToast.error(iziToastOpts);\n          return false;\n        } // console.log({\n        //     title: 'Payment process was successfully done!',\n        //     position: 'topCenter',\n        //     onClosing: () => { window.location.href = `/paypal/order/${orderData.id}/thankyou` }\n        // });\n\n\n        iziToast.success({\n          title: 'Payment process was successfully done!',\n          position: 'topCenter',\n          onClosing: function onClosing() {\n            window.location.href = \"/paypal/order/\".concat(orderData.orderId, \"/thankyou\");\n          }\n        });\n      });\n    }\n  }\n}).render('#paypal-button-container');//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/paypal-payments.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/paypal-payments.js"]();
/******/ 	
/******/ })()
;